// Generated by view binder compiler. Do not edit!
package com.ntd.appid1.appid2.appid3.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.SeekBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.ntd.appid1.appid2.appid3.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogPianoSettingBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView imgVolumeMax;

  @NonNull
  public final ImageView imgVolumeMin;

  @NonNull
  public final ConstraintLayout layoutShowNote;

  @NonNull
  public final ConstraintLayout layoutTempo;

  @NonNull
  public final ConstraintLayout layoutVolume;

  @NonNull
  public final SeekBar sbTempo;

  @NonNull
  public final SeekBar sbVolume;

  @NonNull
  public final ImageView switchShowNote;

  @NonNull
  public final TextView tvClose;

  @NonNull
  public final TextView tvMaxTempo;

  @NonNull
  public final TextView tvSave;

  @NonNull
  public final TextView tvShowNote;

  @NonNull
  public final TextView tvTempo;

  @NonNull
  public final TextView tvTitle;

  @NonNull
  public final TextView tvVolume;

  private DialogPianoSettingBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView imgVolumeMax, @NonNull ImageView imgVolumeMin,
      @NonNull ConstraintLayout layoutShowNote, @NonNull ConstraintLayout layoutTempo,
      @NonNull ConstraintLayout layoutVolume, @NonNull SeekBar sbTempo, @NonNull SeekBar sbVolume,
      @NonNull ImageView switchShowNote, @NonNull TextView tvClose, @NonNull TextView tvMaxTempo,
      @NonNull TextView tvSave, @NonNull TextView tvShowNote, @NonNull TextView tvTempo,
      @NonNull TextView tvTitle, @NonNull TextView tvVolume) {
    this.rootView = rootView;
    this.imgVolumeMax = imgVolumeMax;
    this.imgVolumeMin = imgVolumeMin;
    this.layoutShowNote = layoutShowNote;
    this.layoutTempo = layoutTempo;
    this.layoutVolume = layoutVolume;
    this.sbTempo = sbTempo;
    this.sbVolume = sbVolume;
    this.switchShowNote = switchShowNote;
    this.tvClose = tvClose;
    this.tvMaxTempo = tvMaxTempo;
    this.tvSave = tvSave;
    this.tvShowNote = tvShowNote;
    this.tvTempo = tvTempo;
    this.tvTitle = tvTitle;
    this.tvVolume = tvVolume;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogPianoSettingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogPianoSettingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_piano_setting, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogPianoSettingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.img_volume_max;
      ImageView imgVolumeMax = ViewBindings.findChildViewById(rootView, id);
      if (imgVolumeMax == null) {
        break missingId;
      }

      id = R.id.img_volume_min;
      ImageView imgVolumeMin = ViewBindings.findChildViewById(rootView, id);
      if (imgVolumeMin == null) {
        break missingId;
      }

      id = R.id.layout_show_note;
      ConstraintLayout layoutShowNote = ViewBindings.findChildViewById(rootView, id);
      if (layoutShowNote == null) {
        break missingId;
      }

      id = R.id.layout_tempo;
      ConstraintLayout layoutTempo = ViewBindings.findChildViewById(rootView, id);
      if (layoutTempo == null) {
        break missingId;
      }

      id = R.id.layout_volume;
      ConstraintLayout layoutVolume = ViewBindings.findChildViewById(rootView, id);
      if (layoutVolume == null) {
        break missingId;
      }

      id = R.id.sb_tempo;
      SeekBar sbTempo = ViewBindings.findChildViewById(rootView, id);
      if (sbTempo == null) {
        break missingId;
      }

      id = R.id.sb_volume;
      SeekBar sbVolume = ViewBindings.findChildViewById(rootView, id);
      if (sbVolume == null) {
        break missingId;
      }

      id = R.id.switch_show_note;
      ImageView switchShowNote = ViewBindings.findChildViewById(rootView, id);
      if (switchShowNote == null) {
        break missingId;
      }

      id = R.id.tv_close;
      TextView tvClose = ViewBindings.findChildViewById(rootView, id);
      if (tvClose == null) {
        break missingId;
      }

      id = R.id.tv_max_tempo;
      TextView tvMaxTempo = ViewBindings.findChildViewById(rootView, id);
      if (tvMaxTempo == null) {
        break missingId;
      }

      id = R.id.tv_save;
      TextView tvSave = ViewBindings.findChildViewById(rootView, id);
      if (tvSave == null) {
        break missingId;
      }

      id = R.id.tv_show_note;
      TextView tvShowNote = ViewBindings.findChildViewById(rootView, id);
      if (tvShowNote == null) {
        break missingId;
      }

      id = R.id.tv_tempo;
      TextView tvTempo = ViewBindings.findChildViewById(rootView, id);
      if (tvTempo == null) {
        break missingId;
      }

      id = R.id.tv_title;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      id = R.id.tv_volume;
      TextView tvVolume = ViewBindings.findChildViewById(rootView, id);
      if (tvVolume == null) {
        break missingId;
      }

      return new DialogPianoSettingBinding((ConstraintLayout) rootView, imgVolumeMax, imgVolumeMin,
          layoutShowNote, layoutTempo, layoutVolume, sbTempo, sbVolume, switchShowNote, tvClose,
          tvMaxTempo, tvSave, tvShowNote, tvTempo, tvTitle, tvVolume);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
