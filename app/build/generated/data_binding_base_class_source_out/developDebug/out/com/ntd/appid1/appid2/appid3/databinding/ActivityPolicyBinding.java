// Generated by view binder compiler. Do not edit!
package com.ntd.appid1.appid2.appid3.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.ntd.appid1.appid2.appid3.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPolicyBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView btnBack;

  @NonNull
  public final ConstraintLayout clHeader;

  @NonNull
  public final ImageView icApp;

  @NonNull
  public final TextView tvAppName;

  @NonNull
  public final TextView tvPrivacyPolicy;

  @NonNull
  public final TextView tvTitle;

  @NonNull
  public final TextView tvVersion;

  private ActivityPolicyBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView btnBack,
      @NonNull ConstraintLayout clHeader, @NonNull ImageView icApp, @NonNull TextView tvAppName,
      @NonNull TextView tvPrivacyPolicy, @NonNull TextView tvTitle, @NonNull TextView tvVersion) {
    this.rootView = rootView;
    this.btnBack = btnBack;
    this.clHeader = clHeader;
    this.icApp = icApp;
    this.tvAppName = tvAppName;
    this.tvPrivacyPolicy = tvPrivacyPolicy;
    this.tvTitle = tvTitle;
    this.tvVersion = tvVersion;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPolicyBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPolicyBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_policy, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPolicyBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnBack;
      ImageView btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.clHeader;
      ConstraintLayout clHeader = ViewBindings.findChildViewById(rootView, id);
      if (clHeader == null) {
        break missingId;
      }

      id = R.id.icApp;
      ImageView icApp = ViewBindings.findChildViewById(rootView, id);
      if (icApp == null) {
        break missingId;
      }

      id = R.id.tvAppName;
      TextView tvAppName = ViewBindings.findChildViewById(rootView, id);
      if (tvAppName == null) {
        break missingId;
      }

      id = R.id.tvPrivacyPolicy;
      TextView tvPrivacyPolicy = ViewBindings.findChildViewById(rootView, id);
      if (tvPrivacyPolicy == null) {
        break missingId;
      }

      id = R.id.tvTitle;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      id = R.id.tvVersion;
      TextView tvVersion = ViewBindings.findChildViewById(rootView, id);
      if (tvVersion == null) {
        break missingId;
      }

      return new ActivityPolicyBinding((ConstraintLayout) rootView, btnBack, clHeader, icApp,
          tvAppName, tvPrivacyPolicy, tvTitle, tvVersion);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
